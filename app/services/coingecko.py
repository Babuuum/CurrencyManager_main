from venv import logger

import httpx


symbol_to_id = {
  "BTC": "Bitcoin",
  "ETH": "Ethereum",
  "USDT": "Tether",
  "XRP": "XRP",
  "BNB": "Binance Coin",
  "SOL": "Solana",
  "USDC": "USD Coin",
  "DOGE": "Dogecoin",
  "TRX": "TRON",
  "ADA": "Cardano",
  "WBTC": "Wrapped Bitcoin",
  "HYPE": "Hyperliquid",
  "SUI": "Sui",
  "LINK": "Chainlink",
  "AVAX": "Avalanche",
  "LEO": "Unus Sed Leo",
  "XLM": "Stellar Lumens",
  "BCH": "Bitcoin Cash",
  "TON": "Toncoin",
  "SHIB": "Shiba Inu",
  "HBAR": "Hedera Hashgraph",
  "LTC": "Litecoin",
  "DOT": "Polkadot",
  "DAI": "Dai",
  "UNI": "Uniswap",
  "AAVE": "Aave",
  "CRO": "Cronos (Crypto.com Coin)",
  "MATIC": "Polygon",
  "LINK": "Chainlink",
  "XMR": "Monero",
  "WBTC": "Wrapped Bitcoin",
  "ATOM": "Cosmos",
  "ICP": "Internet Computer",
  "ETC": "Ethereum Classic",
  "FIL": "Filecoin",
  "ALGO": "Algorand",
  "VET": "VeChain",
  "THETA": "Theta Network",
  "XCN": "Conflux",
  "TON": "Toncoin",
  "SAND": "The Sandbox",
  "MANA": "Decentraland",
  "EGLD": "MultiversX",
  "AXS": "Axie Infinity",
  "XTZ": "Tezos",
  "NEAR": "NEAR Protocol",
  "FTT": "FTX Token",
  "CSPR": "Casper",
  "GRT": "The Graph",
  "QNT": "Quant",
  "EOS": "EOS",
  "KSM": "Kusama",
  "CHZ": "Chiliz",
  "AAVE": "Aave",
  "USDD": "Decentralized USD",
  "FRAX": "Frax",
  "TUSD": "TrueUSD",
  "USTC": "TerraClassicUSD",
  "BUSD": "Binance USD",
  "OKB": "OKB",
  "GUSD": "Gemini Dollar",
  "LDO": "Lido DAO",
  "CAKE": "PancakeSwap",
  "LSK": "Lisk",
  "1INCH": "1inch",
  "SUSHI": "SushiSwap",
  "ZEC": "Zcash",
  "RUNE": "THORChain",
  "KLAY": "Klaytn",
  "ENJ": "Enjin Coin",
  "DASH": "Dash",
  "COMP": "Compound",
  "MKR": "Maker",
  "YFI": "yearn.finance",
  "SNX": "Synthetix",
  "REN": "Ren",
  "UMA": "UMA",
  "BAT": "Basic Attention Token",
  "ZRX": "0x",
  "NEXO": "Nexo",
  "CVX": "Convex Finance",
  "MINA": "Mina",
  "BLZ": "Bluzelle",
  "GALA": "Gala",
  "RAY": "Raydium",
  "CELO": "Celo",
  "ANKR": "Ankr",
  "LUNC": "Terra Classic",
  "GLM": "Golem",
  "STX": "Stacks",
  "FLUX": "Flux",
  "RVN": "Ravencoin",
  "ACS": "Axie Infinity Shards",
  "ICX": "ICON",
  "KAVA": "Kava",
  "BTG": "Bitcoin Gold",
  "MANA": "Decentraland",
  "HOT": "Holo",
  "FTM": "Fantom"
}


async def get_price(symbol: str) -> float:
    currency_name = symbol_to_id.get(symbol.upper())
    if not currency_name:
        logger.warning(f"Unknown symbol: {symbol}")
        raise ValueError(f"Unknown symbol: {symbol}")

    api_url = f'https://api.coingecko.com/api/v3/simple/price?ids={currency_name}&vs_currencies=usd'
    async with httpx.AsyncClient() as client:
        response = await client.get(api_url)
        data = response.json()
        logger.info(f"Price for: {symbol}:{data[currency_name.lower()]['usd']}")
        return data[currency_name.lower()]['usd']
