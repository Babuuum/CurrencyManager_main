def build_arbitrage_message(opportunities: dict) -> str:
    if not opportunities:
        return "–ù–µ—Ç –≤—ã–≥–æ–¥–Ω—ã—Ö –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∑–∞ —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª."

    max_pair, max_info = max(opportunities.items(), key=lambda item: item[1]["spread_percent"])
    lines = [
        f"üí∞ *–°–∞–º–æ–µ –≤—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ*: {max_pair} ‚Äî —Å–ø—Ä–µ–¥: {max_info['spread_percent']:.3f}%\n",
        "*–í—ã–≥–æ–¥–Ω—ã–µ –ø–∞—Ä—ã:*"
    ]
    for pair, info in sorted(opportunities.items(), key=lambda item: -item[1]["spread_percent"]):
        lines.append(f"‚Ä¢ {pair}: {info['spread_percent']:.3f}% (–ö—É–ø–∏—Ç—å: {info['buy_exchange']}, –ü—Ä–æ–¥–∞—Ç—å: {info['sell_exchange']})")
    return "\n".join(lines)
